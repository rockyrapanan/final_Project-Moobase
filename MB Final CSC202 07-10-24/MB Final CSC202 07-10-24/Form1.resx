<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Navigation.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UUwYZIBemf8AtSDpZ4UUShP/2Q==
</value>
  </data>
</root>